plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.leungcheng'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

spotless {
	format 'misc', {
		target '*.gradle', '.gitattributes', '.gitignore'
		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		googleJavaFormat()
		formatAnnotations()
		removeUnusedImports()
	}
	sql {
		target 'src/main/resources/db/migration/*.sql'
		dbeaver()
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'org.postgresql:postgresql'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation "com.google.guava:guava:33.3.1-jre"
	implementation "org.springframework.retry:spring-retry"
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register("runDb") {
	description = "Run the database in a container."
	doLast {
		exec {
			commandLine 'docker', 'compose', 'up', '-d', 'postgres'
		}
	}
}

tasks.register("cleanDb") {
	description = "Stop and remove the database container and volumes."
	doLast {
		exec {
			commandLine 'docker', 'compose', 'down', '-v', 'postgres'
		}
	}
}

tasks.register("testLocal") {
	description = "Start the database container if needed and run the tests."
	dependsOn tasks.named("runDb")
	finalizedBy tasks.named("test")
}
